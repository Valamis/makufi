/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package fi.valamis.maakportal2.calendar.event.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Event service. Represents a row in the &quot;Calendar_Event&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link fi.valamis.maakportal2.calendar.event.model.impl.EventModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link fi.valamis.maakportal2.calendar.event.model.impl.EventImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Event
 * @see fi.valamis.maakportal2.calendar.event.model.impl.EventImpl
 * @see fi.valamis.maakportal2.calendar.event.model.impl.EventModelImpl
 * @generated
 */
@ProviderType
public interface EventModel extends BaseModel<Event>, ShardedModel, StagedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a event model instance should use the {@link Event} interface instead.
	 */

	/**
	 * Returns the primary key of this event.
	 *
	 * @return the primary key of this event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this event.
	 *
	 * @param primaryKey the primary key of this event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this event.
	 *
	 * @return the uuid of this event
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this event.
	 *
	 * @param uuid the uuid of this event
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the event ID of this event.
	 *
	 * @return the event ID of this event
	 */
	public long getEventId();

	/**
	 * Sets the event ID of this event.
	 *
	 * @param eventId the event ID of this event
	 */
	public void setEventId(long eventId);

	/**
	 * Returns the group ID of this event.
	 *
	 * @return the group ID of this event
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this event.
	 *
	 * @param groupId the group ID of this event
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this event.
	 *
	 * @return the company ID of this event
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this event.
	 *
	 * @param companyId the company ID of this event
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the create date of this event.
	 *
	 * @return the create date of this event
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this event.
	 *
	 * @param createDate the create date of this event
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this event.
	 *
	 * @return the modified date of this event
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this event.
	 *
	 * @param modifiedDate the modified date of this event
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the event name of this event.
	 *
	 * @return the event name of this event
	 */
	@AutoEscape
	public String getEventName();

	/**
	 * Sets the event name of this event.
	 *
	 * @param eventName the event name of this event
	 */
	public void setEventName(String eventName);

	/**
	 * Returns the starting date of this event.
	 *
	 * @return the starting date of this event
	 */
	public Date getStartingDate();

	/**
	 * Sets the starting date of this event.
	 *
	 * @param startingDate the starting date of this event
	 */
	public void setStartingDate(Date startingDate);

	/**
	 * Returns the ending date of this event.
	 *
	 * @return the ending date of this event
	 */
	public Date getEndingDate();

	/**
	 * Sets the ending date of this event.
	 *
	 * @param endingDate the ending date of this event
	 */
	public void setEndingDate(Date endingDate);

	/**
	 * Returns the times additional info of this event.
	 *
	 * @return the times additional info of this event
	 */
	@AutoEscape
	public String getTimesAdditionalInfo();

	/**
	 * Sets the times additional info of this event.
	 *
	 * @param timesAdditionalInfo the times additional info of this event
	 */
	public void setTimesAdditionalInfo(String timesAdditionalInfo);

	/**
	 * Returns the location of this event.
	 *
	 * @return the location of this event
	 */
	@AutoEscape
	public String getLocation();

	/**
	 * Sets the location of this event.
	 *
	 * @param location the location of this event
	 */
	public void setLocation(String location);

	/**
	 * Returns the address of this event.
	 *
	 * @return the address of this event
	 */
	@AutoEscape
	public String getAddress();

	/**
	 * Sets the address of this event.
	 *
	 * @param address the address of this event
	 */
	public void setAddress(String address);

	/**
	 * Returns the image url of this event.
	 *
	 * @return the image url of this event
	 */
	@AutoEscape
	public String getImageUrl();

	/**
	 * Sets the image url of this event.
	 *
	 * @param imageUrl the image url of this event
	 */
	public void setImageUrl(String imageUrl);

	/**
	 * Returns the description of this event.
	 *
	 * @return the description of this event
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this event.
	 *
	 * @param description the description of this event
	 */
	public void setDescription(String description);

	/**
	 * Returns the additional information of this event.
	 *
	 * @return the additional information of this event
	 */
	@AutoEscape
	public String getAdditionalInformation();

	/**
	 * Sets the additional information of this event.
	 *
	 * @param additionalInformation the additional information of this event
	 */
	public void setAdditionalInformation(String additionalInformation);

	/**
	 * Returns the sign up link of this event.
	 *
	 * @return the sign up link of this event
	 */
	@AutoEscape
	public String getSignUpLink();

	/**
	 * Sets the sign up link of this event.
	 *
	 * @param signUpLink the sign up link of this event
	 */
	public void setSignUpLink(String signUpLink);

	/**
	 * Returns the link to event web page of this event.
	 *
	 * @return the link to event web page of this event
	 */
	@AutoEscape
	public String getLinkToEventWebPage();

	/**
	 * Sets the link to event web page of this event.
	 *
	 * @param linkToEventWebPage the link to event web page of this event
	 */
	public void setLinkToEventWebPage(String linkToEventWebPage);

	/**
	 * Returns the category IDs of this event.
	 *
	 * @return the category IDs of this event
	 */
	@AutoEscape
	public String getCategoryIds();

	/**
	 * Sets the category IDs of this event.
	 *
	 * @param categoryIds the category IDs of this event
	 */
	public void setCategoryIds(String categoryIds);

	/**
	 * Returns the event author name of this event.
	 *
	 * @return the event author name of this event
	 */
	@AutoEscape
	public String getEventAuthorName();

	/**
	 * Sets the event author name of this event.
	 *
	 * @param eventAuthorName the event author name of this event
	 */
	public void setEventAuthorName(String eventAuthorName);

	/**
	 * Returns the event author email of this event.
	 *
	 * @return the event author email of this event
	 */
	@AutoEscape
	public String getEventAuthorEmail();

	/**
	 * Sets the event author email of this event.
	 *
	 * @param eventAuthorEmail the event author email of this event
	 */
	public void setEventAuthorEmail(String eventAuthorEmail);

	/**
	 * Returns the event author phone number of this event.
	 *
	 * @return the event author phone number of this event
	 */
	@AutoEscape
	public String getEventAuthorPhoneNumber();

	/**
	 * Sets the event author phone number of this event.
	 *
	 * @param eventAuthorPhoneNumber the event author phone number of this event
	 */
	public void setEventAuthorPhoneNumber(String eventAuthorPhoneNumber);

	/**
	 * Returns the additional company IDs of this event.
	 *
	 * @return the additional company IDs of this event
	 */
	@AutoEscape
	public String getAdditionalCompanyIds();

	/**
	 * Sets the additional company IDs of this event.
	 *
	 * @param additionalCompanyIds the additional company IDs of this event
	 */
	public void setAdditionalCompanyIds(String additionalCompanyIds);

	/**
	 * Returns the status of this event.
	 *
	 * @return the status of this event
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this event.
	 *
	 * @param status the status of this event
	 */
	public void setStatus(String status);

	/**
	 * Returns the authorization token of this event.
	 *
	 * @return the authorization token of this event
	 */
	@AutoEscape
	public String getAuthorizationToken();

	/**
	 * Sets the authorization token of this event.
	 *
	 * @param authorizationToken the authorization token of this event
	 */
	public void setAuthorizationToken(String authorizationToken);

	/**
	 * Returns the user given password of this event.
	 *
	 * @return the user given password of this event
	 */
	@AutoEscape
	public String getUserGivenPassword();

	/**
	 * Sets the user given password of this event.
	 *
	 * @param userGivenPassword the user given password of this event
	 */
	public void setUserGivenPassword(String userGivenPassword);

	/**
	 * Returns the admin comment of this event.
	 *
	 * @return the admin comment of this event
	 */
	@AutoEscape
	public String getAdminComment();

	/**
	 * Sets the admin comment of this event.
	 *
	 * @param adminComment the admin comment of this event
	 */
	public void setAdminComment(String adminComment);

	/**
	 * Returns the show map of this event.
	 *
	 * @return the show map of this event
	 */
	public boolean getShowMap();

	/**
	 * Returns <code>true</code> if this event is show map.
	 *
	 * @return <code>true</code> if this event is show map; <code>false</code> otherwise
	 */
	public boolean isShowMap();

	/**
	 * Sets whether this event is show map.
	 *
	 * @param showMap the show map of this event
	 */
	public void setShowMap(boolean showMap);

	/**
	 * Returns the update url of this event.
	 *
	 * @return the update url of this event
	 */
	@AutoEscape
	public String getUpdateUrl();

	/**
	 * Sets the update url of this event.
	 *
	 * @param updateUrl the update url of this event
	 */
	public void setUpdateUrl(String updateUrl);

	/**
	 * Returns the event friendly name of this event.
	 *
	 * @return the event friendly name of this event
	 */
	@AutoEscape
	public String getEventFriendlyName();

	/**
	 * Sets the event friendly name of this event.
	 *
	 * @param eventFriendlyName the event friendly name of this event
	 */
	public void setEventFriendlyName(String eventFriendlyName);

	/**
	 * Returns the additional starting dates of this event.
	 *
	 * @return the additional starting dates of this event
	 */
	@AutoEscape
	public String getAdditionalStartingDates();

	/**
	 * Sets the additional starting dates of this event.
	 *
	 * @param additionalStartingDates the additional starting dates of this event
	 */
	public void setAdditionalStartingDates(String additionalStartingDates);

	/**
	 * Returns the additional starting dates rule of this event.
	 *
	 * @return the additional starting dates rule of this event
	 */
	@AutoEscape
	public String getAdditionalStartingDatesRule();

	/**
	 * Sets the additional starting dates rule of this event.
	 *
	 * @param additionalStartingDatesRule the additional starting dates rule of this event
	 */
	public void setAdditionalStartingDatesRule(
		String additionalStartingDatesRule);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		fi.valamis.maakportal2.calendar.event.model.Event event);

	@Override
	public int hashCode();

	@Override
	public CacheModel<fi.valamis.maakportal2.calendar.event.model.Event> toCacheModel();

	@Override
	public fi.valamis.maakportal2.calendar.event.model.Event toEscapedModel();

	@Override
	public fi.valamis.maakportal2.calendar.event.model.Event toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}